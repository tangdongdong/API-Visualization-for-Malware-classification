import urllib
import urllib2
import re
import time
import os
import sys
import zipfile
import os
import requests
import hashlib
import shutil

HashDict = {}
#KeyWord = "Ramnit"


def CalcMD5(filepath):
    with open(filepath, 'rb') as f:
        md5obj = hashlib.md5()
        md5obj.update(f.read())
        hash = md5obj.hexdigest()
        # print(hash)
        return hash


def familymatch(hash,KeyWord):
    flag = False
    params = {'apikey': 'fd8496e55bd9a8fae30989e8ace0bb98847adc5f80d88583cefff98ed9c58434',
              'resource': hash}
    headers = {
        "Accept-Encoding": "gzip, deflate",
        "User-Agent": "gzip,  My Python requests library example client or username"
    }
    response = requests.get('https://www.virustotal.com/vtapi/v2/file/report',
                            params=params, headers=headers)
    json_response = response.json()
    json_response = json_response['scans']
    for item in json_response:
        result = str(json_response[item]['result']).lower()
        if result.__contains__(KeyWord.lower()):
            flag = True
            break
    return flag


class Spider:
    def __init__(self):
        self.siteURL = 'https://virusshare.com/download.4n6?sample='

    def getPage(self, pageIndex):
        url = self.siteURL + str(pageIndex)
        #print url
        send_headers = {
            'Cookie': 'SID=og089ktgspq8sn1h2g9oh4poh0'
        }
        request = urllib2.Request(url,headers=send_headers)
        response = urllib2.urlopen(request, timeout=300)
        return response.read()

    def SaveContents(self, hash):

        KeyWord=HashDict[hash]
        fileName = "/home/hadoop/Downloads/MalZoo/Samples/Zip/" + KeyWord + "/" + str(hash)
        # if os.path.exists(fileName):
        #    return
        """url = "http://malwaredb.malekal.com/files.php?file=" + hash
        urllib.urlretrieve(url, fileName)
        os.rename(fileName, fileName + "r")"""

        sample = self.getPage(hash)
        f = open(fileName, 'wb')
        f.write(sample)
        f.close()



        file_zip = zipfile.ZipFile(fileName, 'r')
        for file in file_zip.namelist():
            file_zip.extract(file, "/home/hadoop/Downloads/MalZoo/Samples/File/" + KeyWord, pwd='infected')
        file_zip.close()
        #os.remove(fileName + "r")
        newhash = ""


spider = Spider()


#spider.getPage(KeyWord)
done = True

for KeyWordtemp in{'Ramnit','Delf','Kelihos','Lollipop','Banker','Ransom','Spybot','Swizzor','Vundo'}:
    f = open("/home/hadoop/Downloads/MalZoo/Hash/"+KeyWordtemp+".txt")
    #os.mkdir('/home/hadoop/Downloads/MalZoo/Samples/Zip/'+KeyWordtemp)
    #os.mkdir('/home/hadoop/Downloads/MalZoo/Samples/File/' + KeyWordtemp)
    line = f.readline()
    while line:
        if(HashDict.__contains__(line)):
            print("fit")
        else:
            HashDict.setdefault(line.strip(),KeyWordtemp)
        line = f.readline()
    print(len(HashDict))
    f.close()
count=0
for key in HashDict.keys():
    print(key),
    print(HashDict[key]),
    count+=1
    if(os.path.exists("/home/hadoop/Downloads/MalZoo/Samples/File/" + HashDict[key]+"/"+key)):
        print(' exists!'+"  "+str(count)+"/"+str(len(HashDict)))
        continue
    print("  " + str(count) + "/" + str(len(HashDict)))
    spider.SaveContents(key)
    time.sleep(10)

